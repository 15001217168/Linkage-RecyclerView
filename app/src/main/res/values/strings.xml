<!--
    ~ Copyright (c) 2018-2019. KunMinX
    ~
    ~ Licensed under the Apache License, Version 2.0 (the "License");
    ~ you may not use this file except in compliance with the License.
    ~ You may obtain a copy of the License at
    ~
    ~    http://www.apache.org/licenses/LICENSE-2.0
    ~
    ~ Unless required by applicable law or agreed to in writing, software
    ~ distributed under the License is distributed on an "AS IS" BASIS,
    ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ~ See the License for the specific language governing permissions and
    ~ limitations under the License.
    ~
-->


<resources>
    <string name="app_name">LinkageListView</string>

    <string name="operators_json">
        "[{\"header\":\"Creating\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"just\"}},{\"isHeader\":false,\"t\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"fromArray\"}},{\"isHeader\":false,\"t\":{\"content\":\"Complex data traversal\",\"group\":\"Creating\",\"title\":\"fromIterable\"}},{\"isHeader\":false,\"t\":{\"content\":\"Timed task\",\"group\":\"Creating\",\"title\":\"interval\"}},{\"isHeader\":false,\"t\":{\"content\":\"Timed task\",\"group\":\"Creating\",\"title\":\"intervalRange\"}},{\"isHeader\":false,\"t\":{\"content\":\"Nested callback asynchronous event\",\"group\":\"Creating\",\"title\":\"create\"}},{\"isHeader\":false,\"t\":{\"content\":\"Delayed task\",\"group\":\"Creating\",\"title\":\"defer\"}},{\"isHeader\":false,\"t\":{\"content\":\"Delayed task\",\"group\":\"Creating\",\"title\":\"timer\"}},{\"header\":\"Transforming\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"map\"}},{\"isHeader\":false,\"t\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"flatMap\"}},{\"isHeader\":false,\"t\":{\"content\":\"Transformation\",\"group\":\"Transforming\",\"title\":\"concatMap\"}},{\"header\":\"Combining\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"concatArray\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"concatDelayError\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"megerArray\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers, and merge events\",\"group\":\"Combining\",\"title\":\"megerArrayDelayError\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers and merge them into one observer\",\"group\":\"Combining\",\"title\":\"zip\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple observers and merge them into one observer\",\"group\":\"Combining\",\"title\":\"combineLatest\"}},{\"isHeader\":false,\"t\":{\"content\":\"Append other events before sending the event\",\"group\":\"Combining\",\"title\":\"startWithArray\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple events into one event\",\"group\":\"Combining\",\"title\":\"reduce\"}},{\"isHeader\":false,\"t\":{\"content\":\"Combine multiple events into one event\",\"group\":\"Combining\",\"title\":\"collect\"}},{\"isHeader\":false,\"t\":{\"content\":\"Summarize the number of events sent\",\"group\":\"Combining\",\"title\":\"count\"}},{\"header\":\"Filtering\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Specify filter criteria to filter the required events or data\",\"group\":\"Filtering\",\"title\":\"filter\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter specified types of events or data\",\"group\":\"Filtering\",\"title\":\"ofType\"}},{\"isHeader\":false,\"t\":{\"content\":\"Events or data with unsatisfied filter conditions\",\"group\":\"Filtering\",\"title\":\"skip\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter duplicate events or data\",\"group\":\"Filtering\",\"title\":\"distinct\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter duplicate events or data\",\"group\":\"Filtering\",\"title\":\"distinctUntilChanged\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter events or data by time or amount\",\"group\":\"Filtering\",\"title\":\"take\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter events at the specified location\",\"group\":\"Filtering\",\"title\":\"elementAt\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter events by time period\",\"group\":\"Filtering\",\"title\":\"throttleFirst\"}},{\"isHeader\":false,\"t\":{\"content\":\"Filter events by time period\",\"group\":\"Filtering\",\"title\":\"throttleLast\"}},{\"header\":\"Conditional\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Determine if all events are met\",\"group\":\"Conditional\",\"title\":\"all\"}},{\"isHeader\":false,\"t\":{\"content\":\"When the sent event judgment condition is not satisfied, the subsequent event reception will be terminated.\",\"group\":\"Conditional\",\"title\":\"takeWhile\"}},{\"isHeader\":false,\"t\":{\"content\":\"Receive subsequent events when the sent event judgment condition is not met\",\"group\":\"Conditional\",\"title\":\"skipWhile\"}},{\"isHeader\":false,\"t\":{\"content\":\"Same as filter\",\"group\":\"Conditional\",\"title\":\"takeUntil\"}},{\"isHeader\":false,\"t\":{\"content\":\"Receive events other than the judgment condition\",\"group\":\"Conditional\",\"title\":\"skipUntil\"}},{\"isHeader\":false,\"t\":{\"content\":\"Determine if the events sent by the two observers are the same\",\"group\":\"Conditional\",\"title\":\"sequenceEqual\"}},{\"isHeader\":false,\"t\":{\"content\":\"Determine whether the specified data contains the specified data.\",\"group\":\"Conditional\",\"title\":\"contains\"}},{\"isHeader\":false,\"t\":{\"content\":\"Determine if the sent data is empty\",\"group\":\"Conditional\",\"title\":\"isEmpty\"}},{\"isHeader\":false,\"t\":{\"content\":\"Multiple observers receive only the \\\"first observed observer who successfully sent data\\\"\",\"group\":\"Conditional\",\"title\":\"amb\"}},{\"header\":\"Blocking\",\"isHeader\":true},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnEach\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnSubscribe\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnNext\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doAfterNext\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnComplete\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send and receive event listeners\",\"group\":\"Blocking\",\"title\":\"doOnError\"}},{\"isHeader\":false,\"t\":{\"content\":\"Error or exception handling: catch exceptions and feedback special results, normal termination\",\"group\":\"Blocking\",\"title\":\"onErrorReturn\"}},{\"isHeader\":false,\"t\":{\"content\":\"Error or exception handling: catch exception and return a new event\",\"group\":\"Blocking\",\"title\":\"onErrorResumeNext\"}},{\"isHeader\":false,\"t\":{\"content\":\"Error or exception handling: exception retry\",\"group\":\"Blocking\",\"title\":\"retry\"}},{\"isHeader\":false,\"t\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeat\"}},{\"isHeader\":false,\"t\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeatWhen\"}},{\"isHeader\":false,\"t\":{\"content\":\"Event retransmission\",\"group\":\"Blocking\",\"title\":\"repeatUntil\"}},{\"isHeader\":false,\"t\":{\"content\":\"Delay sending an observer's event\",\"group\":\"Blocking\",\"title\":\"delay\"}},{\"isHeader\":false,\"t\":{\"content\":\"Send event timeout processing\",\"group\":\"Blocking\",\"title\":\"timeout\"}}]"
    </string>
</resources>
